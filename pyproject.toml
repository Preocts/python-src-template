[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "module-name"
requires-python = ">=3.8"
description = "Module Description"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { email = "yourname@email.invalid", name = "[YOUR NAME]" },
]
maintainers = []
keywords = []
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["dependencies", "optional-dependencies", "version"]

[tool.setuptools_scm]
# Purposely left empty

[tool.setuptools.dynamic.dependencies]
file = ["requirements/requirements.txt"]

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements/requirements-dev.txt"] }
test = { file = ["requirements/requirements-test.txt"] }

[project.urls]
homepage = "https://github.com/[ORG NAME]/[REPO NAME]"

# CLI scripts if needed
# [project.scripts]
# python-src-example = "module_name.sample:main"

[tool.setuptools.package-data]
"module_name" = ["py.typed"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_incomplete_defs = false
disallow_untyped_defs = false
warn_unused_ignores = false

[tool.coverage.run]
branch = true
source = ["tests"]
source_pkgs = ["module_name"]

[tool.coverage.paths]
source = ["src/", "*/site-packages"]
test = ["tests/", "*/tests"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "\\.\\.\\.",
    "if TYPE_CHECKING:",
]
