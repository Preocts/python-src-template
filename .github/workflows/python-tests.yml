name: "python tests and coverage"
# Uses:
# https://github.com/actions/setup-python : a26af69be951a213d495a4c3e4e4022e16d87065
# https://github.com/actions/checkout : 11bd71901bbe5b1630ceea73d27597364c9af683
# https://github.com/actions/download-artifact : d3f86a106a0bac45b974a628896c90dbdf5c8093
# https://github.com/actions/upload-artifact : ea165f8d65b6e75b540449e92b4886f43607fa02

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  settings:
    runs-on: "ubuntu-latest"
    name: "Define workflow settings"
    outputs:
      default-python-version: "3.12"
    steps:
      - name: "Define settings"
        run: ""

  run-tests-and-coverage:
    name: "Run pytest with coverage."
    needs: ["settings"]
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os:
          - "macos-latest"
          - "windows-latest"
          - "ubuntu-latest"
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14"

    steps:
      - name: "Repo checkout"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065"
        with:
          python-version: "${{ matrix.python-version }}"
          allow-prereleases: true

      - name: "Install nox"
        run: |
          python -m pip install --upgrade nox

      - name: "Run tests and coverage via nox"
        run: |
          nox --session test -- partial-coverage

      - name: "Save coverage artifact"
        uses: "actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02"
        with:
          name: "coverage-artifact-${{ matrix.os}}-${{ matrix.python-version}}"
          path: ".coverage.*"
          retention-days: 1
          include-hidden-files: true

  coverage-compile:
    name: "Compile coverage reports."
    needs: ["settings", "run-tests-and-coverage"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Repo checkout"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"

      - name: "Set up Python"
        uses: "actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065"
        with:
          python-version: "${{ needs.settings.outputs.default-python-version }}"

      - name: "Install nox"
        run: |
          python -m pip install --upgrade nox

      - name: "Download coverage artifacts"
        uses: "actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093"
        with:
          pattern: "coverage-artifact-*"
          merge-multiple: true

      - name: "Compile coverage data, print report"
        run: |
          nox --session coverage_combine
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "TOTAL=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

  linting:
    name: "Check linting and formatting requirements"
    needs: ["settings"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Repo checkout"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"

      - name: "Set up Python"
        uses: "actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065"
        with:
          python-version: "${{ needs.settings.outputs.default-python-version }}"

      - name: "Install nox"
        run: |
          python -m pip install --upgrade nox

      - name: "Run formatters and linters"
        run: |
          nox --session lint
