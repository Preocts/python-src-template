name: "python tests and coverage"

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  run-tests-and-coverage:
    name: "Run Tox for tests and coverage"
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os:
          - "macos-latest"
          - "windows-latest"
          - "ubuntu-latest"
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - name: "Repo checkout"
        uses: "actions/checkout@v2"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install tox"
        run: |
          python -m pip install --upgrade pip tox

      - name: "Run tests and coverage via tox"
        run: |
          tox -e py

      - name: "Save coverage artifact"
        uses: "actions/upload-artifact@v3"
        with:
          name: "coverage-artifact"
          path: ".coverage.*"
          retention-days: 1

  coverage-compile:
    name: "coverage compile"
    needs: "run-tests-and-coverage"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Repo checkout"
        uses: "actions/checkout@v2"

      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"

      - name: "Install tox"
        run: |
          python -m pip install --upgrade pip tox

      - name: "Download coverage artifacts"
        uses: actions/download-artifact@v3
        with:
          name: coverage-artifact

      - name: "Compile coverage data, print report"
        run: |
          python -m tox -e coverage
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "TOTAL=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

      - name: "Capture repo name"
        env:
          REF_NAME: ${{ github.ref_name }}
        run: |
          echo "REPO_NAME=${REF_NAME//\//-}" >> $GITHUB_ENV

      # https://nedbatchelder.com/blog/202209/making_a_coverage_badge.html
      # Modified to be a little more portable, filename is unique to branch and repo
      - name: "Make badge"
        env:
          BADGE_TOKEN: "${{ secrets.COV_BADGE_TOKEN }}"
          GIST_ID: "${{ secrets.COV_BADGE_GIST }}"
          FILENAME: "${{ github.event.repository.name }}-${{ env.REPO_NAME }}"
        if: "${{ env.BADGE_TOKEN != '' }} && ${{ env.GIST_ID }}"
        uses: "schneegans/dynamic-badges-action@v1.4.0"
        with:
          auth: "${{ env.BADGE_TOKEN }}"
          gistID: "${{ env.GIST_ID }}"
          filename: "${{ env.FILENAME }}"
          label: "Coverage"
          message: "${{ env.TOTAL }}%"
          minColorRange: "50"
          maxColorRange: "90"
          valColorRange: "${{ env.TOTAL }}"

  ci-success:
    name: "CI steps all completed successfully"
    needs: "coverage-compile"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Success"
        run: |
          echo "If you are seeing this, the CI run was successful."
